@model DomainClasses.Task
@using DataLayer
@using Microsoft.AspNet.Identity;
@using DomainClasses

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Task</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.TeamId)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Time, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Time)
                @Html.ValidationMessageFor(model => model.Time)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AsignedTo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
    TeamRepository teamRepository = TeamRepository.getInstance();
    var team = teamRepository.getTeamForUser(User.Identity.GetUserId());
    List<SelectListItem> listItems = new List<SelectListItem>();
    if (team != null)
    {
        foreach (AppUser member in team.TeamMembers)
        {
            listItems.Add(new SelectListItem
            {
                Text = member.UserName,
                Value = member.UserName
            });
        }
    }
                }
                @Html.DropDownListFor(model => model.AsignedTo, listItems, "Select team member", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AsignedTo)
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
