@model IEnumerable<DomainClasses.Task>
@using TaskManagement.Utils;
@using DomainClasses.Enums;

@{
    ViewBag.Title = "Task";
}

<h2>Task</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.TaskStatus)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.AsignedTo)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.CreatedBy)
        </th>

        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>

            <td>
                @if (item.TaskStatus == TaskStatus.close)
                {
                    <span class="color-red">Closed</span>
                }
                @if (item.TaskStatus == TaskStatus.open)
                {
                    <span class="color-green">Open</span>
                }
                @if (item.TaskStatus == TaskStatus.inTesting)
                {
                    <span class="color-blue">In testing</span>
                }
                @if (item.TaskStatus == TaskStatus.inProgress)
                {
                    <span class="color-violet">In progress</span>
                }
            </td>

            <td>

           
                @Html.DisplayFor(modelItem => item.AsignedTo)
            </td>

            <td>@Html.DisplayFor(modelItem => item.CreatedBy)</td>

            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
